<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Spring]]></title><description><![CDATA[Level up your Java code and explore what Spring can do for you.]]></description><link>https://spring.io</link><generator>GatsbyJS</generator><lastBuildDate>Thu, 05 Dec 2024 00:35:41 GMT</lastBuildDate><item><title><![CDATA[Spring Tools 4.27.0 released]]></title><link>https://spring.io/blog/2024/12/04/spring-tools-4-27-0-released</link><guid isPermaLink="true">https://spring.io/blog/2024/12/04/spring-tools-4-27-0-released</guid><dc:creator><![CDATA[martinlippert]]></dc:creator><pubDate>Wed, 04 Dec 2024 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Dear Spring Community,&lt;/p&gt;
&lt;p&gt;I am happy to announce the 4.27.0 release of the Spring Tools 4 for Visual Studio Code, Eclipse and Theia.&lt;/p&gt;
&lt;h4 id=&quot;important-highlights&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#important-highlights&quot; aria-label=&quot;important highlights permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;important highlights&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;(Spring Boot)&lt;/em&gt; Support for &lt;code&gt;@ConditionalOnProperty&lt;/code&gt; annotations: completions, navigate to definition and find references&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(Spring Boot)&lt;/em&gt; Find references support for property keys in &lt;code&gt;@Value&lt;/code&gt; annotation&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(Spring Boot)&lt;/em&gt; Support concatenated Strings for data queries inside &lt;code&gt;@Query&lt;/code&gt; annotations&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;updates-to-the-spring-tools-4-for-eclipse-distribution&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#updates-to-the-spring-tools-4-for-eclipse-distribution&quot; aria-label=&quot;updates to the spring tools 4 for eclipse distribution permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;updates to the Spring Tools 4 for Eclipse distribution&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;updated to Eclipse 2024-12 release (&lt;a href=&quot;https://eclipseide.org/release/noteworthy/&quot;&gt;new and noteworthy&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Detailed changes can be found in the release notes: &lt;a href=&quot;https://github.com/spring-projects/sts4/releases/tag/4.27.0.RELEASE&quot;&gt;https://github.com/spring-projects/sts4/releases/tag/4.27.0.RELEASE&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;downloads&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#downloads&quot; aria-label=&quot;downloads permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;downloads&lt;/h4&gt;
&lt;p&gt;To download the distribution for Eclipse and find links to the marketplace entries for Visual Studio Code and Theia, please go visit:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Spring Tools 4: &lt;a href=&quot;https://spring.io/tools/&quot;&gt;https://spring.io/tools/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Spring Tools 4.28.0 is scheduled to be released in late January 2025.&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Extending Spring Data Repositories Just Got Easier]]></title><link>https://spring.io/blog/2024/12/03/extending-spring-data-repositories-just-got-easier</link><guid isPermaLink="true">https://spring.io/blog/2024/12/03/extending-spring-data-repositories-just-got-easier</guid><dc:creator><![CDATA[christophstrobl]]></dc:creator><pubDate>Tue, 03 Dec 2024 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Since its inception, Spring Data Repositories have been designed for extension, whether you want to customize a single query method or provide a completely new base implementation.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/spring-projects/spring-data-commons/wiki/Spring-Data-2024.1-Release-Notes&quot;&gt;2024.1 release&lt;/a&gt; enhances your ability to extend a repository with &lt;a href=&quot;https://docs.spring.io/spring-data/commons/reference/repositories/custom-implementations.html&quot;&gt;custom functionality&lt;/a&gt; making it easier than ever for anyone to create extensions that can be shared across different projects.&lt;/p&gt;
&lt;p&gt;Let¡¯s explore an example to see how this works in practice.&lt;/p&gt;
&lt;p&gt;Imagine you are using MongoDB as a document store to manage a movie database. You want to leverage MongoDBs Atlas &lt;a href=&quot;https://www.mongodb.com/docs/atlas/atlas-vector-search/vector-search-stage/&quot;&gt;vector search&lt;/a&gt; functionality through your repository interfaces for AI-powered search operations. Typically, you¡¯d create a custom repository fragment like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;package io.movie.db;

interface AtlasMovieRepository {
   List&amp;#x3C;Movie&gt; vectorSearch(String index, String path, List&amp;#x3C;Double&gt; vector, Limit limit);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here, since you&apos;re working with the &lt;code&gt;Movie&lt;/code&gt; type, you already know the collection. The index parameter specifies the vector index to use, and path defines the field holding the &lt;a href=&quot;https://www.mongodb.com/docs/atlas/atlas-vector-search/create-embeddings/&quot;&gt;vector embeddings&lt;/a&gt; for comparison. The similarity function (e.g., euclidean, cosine, or dotProduct) is determined when you set up the index. Let¡¯s assume a cosine vector index is already in place.&lt;/p&gt;
&lt;p&gt;In your fragment implementation, you will need to create the &lt;code&gt;$vectorSearch&lt;/code&gt; aggregation stage, MongoDB&apos;s approach to running vector searches, and integrate it into the Aggregation API using &lt;code&gt;MongoOperations&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;package io.movie.db;

class AtlasMovieRepositoryFragment implements AtlasMovieRepository {

   private final MongoOperations mongoOperations;

   public AtlasMovieRepositoryFragment(MongoOperations mongoOperations) {
       this.mongoOperations = mongoOperations;
   }

   @Override
   public List&amp;#x3C;Movie&gt; vectorSearch(String index, String path, List&amp;#x3C;Double&gt; vector, Limit limit) {
       Document $vectorSearch = createSearchDocument(index, path, vector, limit);
       Aggregation aggregation = Aggregation.newAggregation(ctx -&gt; $vectorSearch);
       return mongoOperations.aggregate(aggregation, &quot;movies&quot;, Movie.class).getMappedResults();
   }

   private static Document createSearchDocument(String index, String path, List&amp;#x3C;Double&gt; vector, Limit limit) {
       Document $vectorSearch = new Document();
       $vectorSearch.append(&quot;index&quot;, index);
       $vectorSearch.append(&quot;path&quot;, path);
       $vectorSearch.append(&quot;queryVector&quot;, vector);
       $vectorSearch.append(&quot;limit&quot;, limit.max());

       return new Document(&quot;$vectorSearch&quot;, $vectorSearch);
   }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, simply integrate the fragment into your &lt;code&gt;MovieRepository&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;package io.movie.db;

interface MovieRepository extends CrudRepository&amp;#x3C;Movie, String&gt;, AtlasMovieRepository { }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;While this approach works, you might notice that it is tightly coupled to a single repository with a specific domain type (&lt;code&gt;Movie&lt;/code&gt;). This makes it difficult to reuse in other projects, as the fragment implementations are tied to the repository¡¯s package and are domain-specific.&lt;/p&gt;
&lt;p&gt;But vector search isn&apos;t limited to just our Movie database. What if we want to reuse this functionality in other projects without copying and modifying the solution? Let¡¯s explore a way to make this more generic.&lt;/p&gt;
&lt;h3 id=&quot;making-it-reusable&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#making-it-reusable&quot; aria-label=&quot;making it reusable permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Making It Reusable&lt;/h3&gt;
&lt;p&gt;To enable reuse, we move the &lt;code&gt;AtlasMovieRepository&lt;/code&gt; and its implementation to a separate project so that it can be shared. Then, we register the fragment within the &lt;code&gt;META-INF/spring.factories&lt;/code&gt; file, so that Spring Data knows about the extension:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-properties&quot;&gt;api.mongodb.atlas.AtlasMovieRepository=api.mongodb.atlas.AtlasMovieRepositoryFragment
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, the current implementation is still tied to the &lt;code&gt;Movie&lt;/code&gt; type, limiting its reusability. To fix this, we need to make the fragment more generic. Rename &lt;code&gt;AtlasMovieRepository&lt;/code&gt; to &lt;code&gt;AtlasRepository&lt;/code&gt; and introduce a generic type parameter. Don¡¯t forget to update the &lt;code&gt;spring.factories&lt;/code&gt; file as well.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;package api.mongodb.atlas;

interface AtlasRepository&amp;#x3C;T&gt; {
   List&amp;#x3C;T&gt; vectorSearch(String index, String path, List&amp;#x3C;Double&gt; vector, Limit limit);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, we update the implementation to reflect the new generic approach, as we can no longer assume we&apos;re targeting the &lt;code&gt;Movie&lt;/code&gt; collection. Using the newly introduced &lt;code&gt;RepositoryMethodContext&lt;/code&gt;, we can access repository metadata and determine the appropriate collection name dynamically:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;package api.mongodb.atlas;

class AtlasRepositoryFragment&amp;#x3C;T&gt; implements AtlasRepository&amp;#x3C;T&gt;, RepositoryMetadataAccess {

   private MongoOperations mongoOperations;

   public AtlasRepositoryFragment(MongoOperations mongoOperations) {
       this.mongoOperations = mongoOperations;
   }

   @Override
   public List&amp;#x3C;T&gt; vectorSearch(String index, String path, List&amp;#x3C;Double&gt; vector, Limit limit) {
       RepositoryMethodContext methodContext = RepositoryMethodContext.getContext();

       Class&amp;#x3C;?&gt; domainType = methodContext.getMetadata().getDomainType();

       Document $vectorSearch = createSearchDocument(index, path, vector, limit);
       Aggregation aggregation = Aggregation.newAggregation(ctx -&gt; $vectorSearch);
       return (List&amp;#x3C;T&gt;) mongoOperations.aggregate(aggregation, mongoOperations.getCollectionName(domainType), domainType).getMappedResults();
   }

   private static Document createSearchDocument(String indexName, String path, List&amp;#x3C;Double&gt; vector, Limit limit) {
       Document $vectorSearch = new Document();
       //¡¦
   }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The provided method context not only allows you to access general information about the repository, but also gives you access to the repositories&apos; generics, methods etc. In the above snippet we assume that the repository domain type aligns with our custom fragment, which must not be the case. So instead we could also read the component type of the interface via &lt;code&gt;ResolvableType.forClass(getRepositoryInterface()).as(AtlasRepository.class).getGeneric(0)&lt;/code&gt; or even check the current methods return type to apply additional manipulation like projections and the such. For simplicity let¡¯s stick with the domain type in this sample.&lt;/p&gt;
&lt;p&gt;To avoid unnecessary overhead, we only enable context access for repositories that need it.
Looking carefully at the code above you will see that there is an extra &lt;code&gt;RepositoryMetadataAccess&lt;/code&gt; interface on the &lt;code&gt;AtlasRepositoryFragment&lt;/code&gt; class. This marker interfaces advises the infrastructure to provide the required metadata on method invocation.&lt;/p&gt;
&lt;p&gt;With that setup, you can now use the custom extension in any project by simply extending your repository:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;package io.movie.db;

interface MovieRepository extends CrudRepository&amp;#x3C;Movie, String&gt;, AtlasRepository&amp;#x3C;Movie&gt; { }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To try it out, visit the &lt;a href=&quot;https://github.com/spring-projects/spring-data-examples/tree/main/mongodb/fragment-spi&quot;&gt;Spring Data Examples&lt;/a&gt; project, where you¡¯ll find the code ready to run.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Spring Cloud 2024.0.0 (aka Moorgate) Is Now Available]]></title><link>https://spring.io/blog/2024/12/03/spring-cloud-2024-0-0</link><guid isPermaLink="true">https://spring.io/blog/2024/12/03/spring-cloud-2024-0-0</guid><dc:creator><![CDATA[OlgaMaciaszek]]></dc:creator><pubDate>Tue, 03 Dec 2024 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;On behalf of the community, I am pleased to announce that the General Availability (RELEASE) of the &lt;a href=&quot;https://cloud.spring.io&quot;&gt;Spring Cloud 2024.0.0&lt;/a&gt; Release Train is available today. The release can be found in &lt;a href=&quot;https://repo1.maven.org/maven2/org/springframework/cloud/spring-cloud-dependencies/2024.0.0/&quot;&gt;Maven Central&lt;/a&gt;. You can check out the 2024.0 &lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-release/wiki/Spring-Cloud-2024.0-Release-Notes&quot;&gt;release notes for more information&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;notable-changes-in-the-20240-release-train&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#notable-changes-in-the-20240-release-train&quot; aria-label=&quot;notable changes in the 20240 release train permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notable Changes in the 2024.0 Release Train&lt;/h2&gt;
&lt;p&gt;This release is based upon Spring Boot &lt;a href=&quot;https://github.com/spring-projects/spring-boot/releases/tag/v3.4.0&quot;&gt;3.4.0&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See all issues in 2024.0.0 &lt;a href=&quot;https://github.com/orgs/spring-cloud/projects/159&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;spring-cloud-circuitbreaker&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#spring-cloud-circuitbreaker&quot; aria-label=&quot;spring cloud circuitbreaker permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spring Cloud CircuitBreaker&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;TimeLimiter disable by group or instance level (&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-circuitbreaker/issues/202&quot;&gt;#202&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;spring-cloud-config&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#spring-cloud-config&quot; aria-label=&quot;spring cloud config permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spring Cloud Config&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;S3 Backend Behaves Differently With Multiple Application Names (&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-config/issues/2642&quot;&gt;#2642&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;spring-cloud-gateway&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#spring-cloud-gateway&quot; aria-label=&quot;spring cloud gateway permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spring Cloud Gateway&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Cache gateway filters to avoid sorting in every single request (&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-gateway/issues/2756&quot;&gt;#2756&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Support for SslBundles in HttpClientProperties (&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-gateway/issues/2981&quot;&gt;#2981&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Provides configuration for Netty&apos;s http client pool leasing strategy (&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-gateway/pull/3575&quot;&gt;#3575&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;spring-cloud-kubernetes&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#spring-cloud-kubernetes&quot; aria-label=&quot;spring cloud kubernetes permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spring Cloud Kubernetes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Add support for the configuration watcher to shut down the application to refresh the application (&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-kubernetes/pull/1799&quot;&gt;#1799&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following modules were updated as part of 2024.0.0:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Module&lt;/th&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;th&gt;Issues&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Vault&lt;/td&gt;
&lt;td&gt;4.2.0&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-vault/releases/tag/v4.2.0&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Bus&lt;/td&gt;
&lt;td&gt;4.2.0&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-bus/releases/tag/v4.2.0&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Task&lt;/td&gt;
&lt;td&gt;3.2.0&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-task/releases/tag/v3.2.0&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Zookeeper&lt;/td&gt;
&lt;td&gt;4.2.0&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-zookeeper/releases/tag/v4.2.0&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Kubernetes&lt;/td&gt;
&lt;td&gt;3.2.0&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-kubernetes/releases/tag/v3.2.0&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Function&lt;/td&gt;
&lt;td&gt;4.2.0&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-function/releases/tag/v4.2.0&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Commons&lt;/td&gt;
&lt;td&gt;4.2.0&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-commons/releases/tag/v4.2.0&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Openfeign&lt;/td&gt;
&lt;td&gt;4.2.0&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-openfeign/releases/tag/v4.2.0&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Circuitbreaker&lt;/td&gt;
&lt;td&gt;3.2.0&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-circuitbreaker/releases/tag/v3.2.0&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Starter Build&lt;/td&gt;
&lt;td&gt;2024.0.0&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-starter-build/releases/tag/v2024.0.0&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Stream&lt;/td&gt;
&lt;td&gt;4.2.0&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-stream/releases/tag/v4.2.0&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Consul&lt;/td&gt;
&lt;td&gt;4.2.0&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-consul/releases/tag/v4.2.0&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Gateway&lt;/td&gt;
&lt;td&gt;4.2.0&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-gateway/releases/tag/v4.2.0&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Contract&lt;/td&gt;
&lt;td&gt;4.2.0&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-contract/releases/tag/v4.2.0&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Config&lt;/td&gt;
&lt;td&gt;4.2.0&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-config/releases/tag/v4.2.0&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Build&lt;/td&gt;
&lt;td&gt;4.2.0&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-build/releases/tag/v4.2.0&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Netflix&lt;/td&gt;
&lt;td&gt;4.2.0&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-netflix/releases/tag/v4.2.0&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;As always, we welcome feedback on &lt;a href=&quot;https://github.com/spring-cloud/&quot;&gt;GitHub&lt;/a&gt;, on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/spring-cloud&quot;&gt;Stack Overflow&lt;/a&gt;, or on &lt;a href=&quot;https://twitter.com/SpringCloud&quot;&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To get started with Maven with a BOM (dependency management only):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;#x3C;dependencyManagement&gt;
   &amp;#x3C;dependencies&gt;
       &amp;#x3C;dependency&gt;
           &amp;#x3C;groupId&gt;org.springframework.cloud&amp;#x3C;/groupId&gt;
           &amp;#x3C;artifactId&gt;spring-cloud-dependencies&amp;#x3C;/artifactId&gt;
           &amp;#x3C;version&gt;2024.0.0&amp;#x3C;/version&gt;
           &amp;#x3C;type&gt;pom&amp;#x3C;/type&gt;
           &amp;#x3C;scope&gt;import&amp;#x3C;/scope&gt;
       &amp;#x3C;/dependency&gt;
   &amp;#x3C;/dependencies&gt;
&amp;#x3C;/dependencyManagement&gt;
&amp;#x3C;dependencies&gt;
   &amp;#x3C;dependency&gt;
       &amp;#x3C;groupId&gt;org.springframework.cloud&amp;#x3C;/groupId&gt;
       &amp;#x3C;artifactId&gt;spring-cloud-starter-config&amp;#x3C;/artifactId&gt;
   &amp;#x3C;/dependency&gt;
   &amp;#x3C;dependency&gt;
       &amp;#x3C;groupId&gt;org.springframework.cloud&amp;#x3C;/groupId&gt;
       &amp;#x3C;artifactId&gt;spring-cloud-starter-netflix-eureka-client&amp;#x3C;/artifactId&gt;
   &amp;#x3C;/dependency&gt;
   ...
&amp;#x3C;/dependencies&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or with Gradle:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-groovy&quot;&gt;buildscript {
  dependencies {
    classpath &quot;io.spring.gradle:dependency-management-plugin:1.0.2.RELEASE&quot;
  }
}


apply plugin: &quot;io.spring.dependency-management&quot;


dependencyManagement {
  imports {
    mavenBom &apos;org.springframework.cloud:spring-cloud-dependencies:2024.0.0&apos;
  }
}


dependencies {
  compile &apos;org.springframework.cloud:spring-cloud-starter-config&apos;
  compile &apos;org.springframework.cloud:spring-cloud-starter-netflix-eureka-client&apos;
  //...
}
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[This Week in Spring - December 3rd, 2024]]></title><link>https://spring.io/blog/2024/12/03/this-week-in-spring-december-3rd-2024</link><guid isPermaLink="true">https://spring.io/blog/2024/12/03/this-week-in-spring-december-3rd-2024</guid><dc:creator><![CDATA[joshlong]]></dc:creator><pubDate>Tue, 03 Dec 2024 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hi, Spring fans! Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! It&apos;s the first week of December and I am in the amazing city of Perth, Australia. Perth, for those of you who don&apos;t know, is amazing. And well worth the journey. But it is &lt;em&gt;quite&lt;/em&gt; the journey! 27 hours, door-to-door, from San Francisco to Perth! Insanity.&lt;/p&gt;
&lt;p&gt;I&apos;m super happy to be here, though, talking to amazing folks before I begin my journey from Melbourne, Brisbane, and Sydney, Australia for the epic YOW! conference. It&apos;s going to be a ton of fun.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I love this InfoQ interview &lt;a href=&quot;https://www.infoq.com/news/2024/11/spring-6-2-spring-boot-3-4/&quot;&gt;with Spring Framework lead J?rgen Hoeller and Spring Framework contributor S?bastien Deleuze&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I also love this article on &lt;a href=&quot;https://www.infoq.com/articles/reactive-notification-system-server-sent-events/&quot;&gt;reactive websockets with Spring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Extending &lt;a href=&quot;https://spring.io/blog/2024/12/03/extending-spring-data-repositories-just-got-easier&quot;&gt;Spring Data repositories just got easier!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Huh. Apparently the old SpringSource repositories &lt;a href=&quot;https://spring.io/blog/2024/12/02/repository-springsource-com-sunset&quot;&gt;just got sunsetted. I had no idea we still maintained them.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;In this week&apos;s installment of &lt;a href=&quot;https://spring.io/blog/2024/11/28/a-bootiful-podcast-dave-cramer&quot;&gt;&lt;em&gt;A Bootiful Podcast&lt;/em&gt;, I talk to Dave Cramer, PostgreSQL and PostgreSQL JDBC driver contributor extraordinairre&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2024/11/27/spring-cloud-2023-0-4&quot;&gt;Spring Cloud 2023.0.4 is now available&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2024/11/27/spring-cloud-stream-applications-2022-0-1-ga-release-now-available&quot;&gt;Spring Cloud Stream Applications is now available&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2024/11/26/http3-in-reactor-2024&quot;&gt;HTTP3 in Reactor!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item></channel></rss>