/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.96
 * Generated at: 2025-01-02 01:26:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Home</title>\r\n");
      out.write("<link rel =\"stylesheet\"  href=\"/resources/default.css\">\r\n");
      out.write("<style>\r\n");
      out.write("	/* 모달 전체 */\r\n");
      out.write("	.modal {\r\n");
      out.write("	    display: none; \r\n");
      out.write("	    position: fixed; \r\n");
      out.write("	    top: 0;\r\n");
      out.write("	    left: 0;\r\n");
      out.write("	    width: 100%;\r\n");
      out.write("	    height: 100%;\r\n");
      out.write("	    background-color: rgba(0, 0, 0, 0.4); \r\n");
      out.write("	    z-index: 1000; \r\n");
      out.write("	    \r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.modal-place {\r\n");
      out.write("	    display: flex;\r\n");
      out.write("	    justify-content: center;\r\n");
      out.write("	    align-items: center;\r\n");
      out.write("	    width: 100%;\r\n");
      out.write("	    height: 100%;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.modal-contents {\r\n");
      out.write("	    background-color: #fff;\r\n");
      out.write("	    border-radius: 5px;\r\n");
      out.write("	    width: 450px; \r\n");
      out.write("	    max-height: 400px; /* 최대 높이 설정 */\r\n");
      out.write("	    padding: 20px;\r\n");
      out.write("	    display: flex; /* Flexbox 사용 */\r\n");
      out.write("	    flex-direction: column; /* 세로 방향으로 정렬 */\r\n");
      out.write("	    align-items: center; /* 가로 방향 가운데 정렬 */\r\n");
      out.write("	    justify-content: center; /* 세로 방향 가운데 정렬 */\r\n");
      out.write("	    \r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.modal-body {\r\n");
      out.write("	    display: flex;\r\n");
      out.write("	    flex-direction: column;\r\n");
      out.write("	}\r\n");
      out.write("	.modal-title-container {\r\n");
      out.write("	    flex: 1; /* 남은 공간을 차지하도록 설정 */\r\n");
      out.write("	    display: flex; /* Flexbox 사용 */\r\n");
      out.write("	    justify-content: center; /* 가운데 정렬 */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.top {\r\n");
      out.write("	    display: flex; \r\n");
      out.write("	    align-items: center;\r\n");
      out.write("	    position: relative; /* X 버튼 절대 위치 잡기 위해 필요 */\r\n");
      out.write("	    font-size: 18px;\r\n");
      out.write("	    margin-bottom: 10px;\r\n");
      out.write("	    border: none;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#modal-title{\r\n");
      out.write("		font-size: 22px;\r\n");
      out.write("		color: gray;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* X 버튼을 오른쪽 끝으로 이동 */\r\n");
      out.write("	.modal-close {\r\n");
      out.write("	    position: absolute;\r\n");
      out.write("	    right: 0;\r\n");
      out.write("	    cursor: pointer;\r\n");
      out.write("	    font-size: 18px;\r\n");
      out.write("	    color: #ff6b6b;\r\n");
      out.write("	}\r\n");
      out.write("	/* 탭 버튼 컨테이너 */\r\n");
      out.write("	.tab-buttons {\r\n");
      out.write("	    display: flex;\r\n");
      out.write("	    border-bottom: 1px solid gray; /* 탭 아래 구분선 */\r\n");
      out.write("	    margin-bottom: 20px; /* 컨텐츠와 간격 */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 탭 버튼 */\r\n");
      out.write("	.tab-button {\r\n");
      out.write("	    flex: 1;\r\n");
      out.write("	    text-align: center;\r\n");
      out.write("	    padding: 12px 0;\r\n");
      out.write("	    font-size: 15px; \r\n");
      out.write("	    font-weight: 500;\r\n");
      out.write("	    color: #777; \r\n");
      out.write("	    text-decoration: none; \r\n");
      out.write("	    border: none; \r\n");
      out.write("	    background: none; \r\n");
      out.write("	    cursor: pointer;\r\n");
      out.write("	    /* 탭 구분 위해 아래쪽만 테두리 사용 */\r\n");
      out.write("	    border-bottom: 3px solid transparent;\r\n");
      out.write("	    transition: color 0.2s, border-bottom 0.2s;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 활성화된 탭 */\r\n");
      out.write("	.tab-button.active {\r\n");
      out.write("	    color: #000; \r\n");
      out.write("	    border-bottom: 3px solid #f0a235; /* 오렌지색 포인트 */\r\n");
      out.write("	    font-weight: 600;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 탭 hover 효과 */\r\n");
      out.write("	.tab-button:hover {\r\n");
      out.write("	    color: #333;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 폼 영역 스타일 */\r\n");
      out.write("	.modal-body label {\r\n");
      out.write("	    margin-top: 10px;\r\n");
      out.write("	    font-size: 14px;\r\n");
      out.write("	    color: #555;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.modal-body input {\r\n");
      out.write("	    margin-top: 5px;\r\n");
      out.write("	    padding: 10px;\r\n");
      out.write("	    border: 1px solid #ccc;\r\n");
      out.write("	    border-radius: 5px;\r\n");
      out.write("	    width: 100%;\r\n");
      out.write("	    box-sizing: border-box;\r\n");
      out.write("	}\r\n");
      out.write("	.button-container {\r\n");
      out.write("	    display: flex; /* Flexbox 사용 */\r\n");
      out.write("	    justify-content: center; /* 가운데 정렬 */\r\n");
      out.write("	    width: 100%; /* 전체 너비 사용 */\r\n");
      out.write("	    margin-top: 20px; /* 버튼과 위 요소 간의 간격 */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 제출 버튼 */\r\n");
      out.write("	.submit-button {\r\n");
      out.write("	    margin-top: 20px;\r\n");
      out.write("	    padding: 12px;\r\n");
      out.write("	    background-color: #f0a235; \r\n");
      out.write("	    color: white;\r\n");
      out.write("	    border: none;\r\n");
      out.write("	    border-radius: 5px;\r\n");
      out.write("	    cursor: pointer;\r\n");
      out.write("	    font-weight: 600;\r\n");
      out.write("	    text-align: center;\r\n");
      out.write("	    transition: background-color 0.2s;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#actionButton{\r\n");
      out.write("		width: 350px;\r\n");
      out.write("		height: 50px;	\r\n");
      out.write("		display: flex; \r\n");
      out.write("	    align-items: center;\r\n");
      out.write("	    justify-content: center; /* 가운데 정렬 */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.submit-button:hover {\r\n");
      out.write("	    background-color: #e59424; \r\n");
      out.write("	}\r\n");
      out.write("	#resultSection{\r\n");
      out.write("		text-align: center;\r\n");
      out.write("		font-weight: bold;\r\n");
      out.write("		font-size: 18px; \r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<header>\r\n");
      out.write("	<div class=\"header\">\r\n");
      out.write("			<div class=\"logo\">\r\n");
      out.write("				<img alt=\"댕냥일기\"  src=\"/resources/css_image/logo.png\"  class=\"logo-img\">\r\n");
      out.write("				<span class=\"logo-text\">댕냥일기</span>\r\n");
      out.write("			</div>		\r\n");
      out.write("			<nav>\r\n");
      out.write("				<a href=\"/member/joinFrm.kh\" class=\"nav-text\">회원가입</a>\r\n");
      out.write("				<a href=\"/\" class=\"nav-text\">로그인</a>\r\n");
      out.write("			</nav>\r\n");
      out.write("	</div>\r\n");
      out.write("</header>\r\n");
      out.write("	<div class=\"main\">\r\n");
      out.write("	<div>\r\n");
      out.write("		<img alt=\"메인 이미지\" src=\"/resources/css_image/main.jpg\" class=\"main-image\">\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("		<div class=\"index-area\">\r\n");
      out.write("			<div class=\"title-text\">로그인</div>\r\n");
      out.write("			\r\n");
      out.write("			<form action=\"/member/login.kh\" method=\"post\">\r\n");
      out.write("				<div class=\"input-area\">\r\n");
      out.write("					<span class=\"tag-name\">ID</span> <br> \r\n");
      out.write("					<input type=\"text\" name=\"userId\"> <br>\r\n");
      out.write("					<span class=\"tag-name\">Password</span> <br> \r\n");
      out.write("					<input type=\"password\" name=\"userPw\">\r\n");
      out.write("					<div class=\"srch-link\">			\r\n");
      out.write("						 <a href=\"#\" class=\"other-link\" id=\"openModal\">아이디/비밀번호를 잊었나요?</a>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				\r\n");
      out.write("					<input type=\"submit\" value=\"로그인\" class=\"submit-button\">		\r\n");
      out.write("				<div>\r\n");
      out.write("					<a href=\"/member/joinFrm.kh\" class=\"other-link\">계정이 없으신가요?</a>\r\n");
      out.write("				</div>\r\n");
      out.write("			</form>\r\n");
      out.write("			<div class=\"api-area\">\r\n");
      out.write("			<a href=\"/naver/login.kh\" id=\"naver\"></a>\r\n");
      out.write("			<a href=\"/kakao/login.kh\" id=\"kakao\"></a>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div class=\"modal\" id=\"modal\">\r\n");
      out.write("	    <div class=\"modal-place\">\r\n");
      out.write("	        <div class=\"modal-contents\">\r\n");
      out.write("	            <div class=\"modal-body\">\r\n");
      out.write("		            <div class=\"top\">\r\n");
      out.write("		                    <div class=\"modal-title-container\">\r\n");
      out.write("	        					<span id=\"modal-title\">아이디 찾기</span>\r\n");
      out.write("	    					</div>\r\n");
      out.write("		                    <a href=\"#\" class=\"modal-close\" id=\"closeModal\">X</a>\r\n");
      out.write("		                </div>\r\n");
      out.write("	                <div class=\"tab-buttons\">\r\n");
      out.write("	                    <a href=\"#\" id=\"findIdButton\" class=\"tab-button active\">아이디 찾기</a>\r\n");
      out.write("	                    <a href=\"#\" id=\"findPasswordButton\" class=\"tab-button\">비밀번호 찾기</a>\r\n");
      out.write("	                </div>\r\n");
      out.write("	                <form id=\"findForm\" action=\"/member/find.kh\" method=\"post\">\r\n");
      out.write("	                	<input type=\"hidden\" name=\"actionType\" id=\"actionType\" value=\"findId\">\r\n");
      out.write("	                    <div id=\"findSection\">\r\n");
      out.write("	                        <label id=\"sectionLabel\">가입한 이메일 입력</label>\r\n");
      out.write("	                        <input type=\"email\" name=\"email\" id=\"emailInput\" placeholder=\"이메일을 입력하세요\" required>\r\n");
      out.write("	                        <label id=\"phoneLabel\" style=\"display: block;\">전화번호 입력</label>\r\n");
      out.write("	                        <input type=\"tel\" name=\"phone\" id=\"phoneInput\" placeholder=\"전화번호를 입력하세요\">\r\n");
      out.write("	                        <label id=\"userIdLabel\" style=\"display: none;\">가입한 아이디 입력</label>\r\n");
      out.write("	                        <input type=\"text\" name=\"userId\" id=\"userIdInput\" placeholder=\"아이디를 입력하세요\" style=\"display: none;\">\r\n");
      out.write("	                        <div class=\"button-container\"> \r\n");
      out.write("            					<button type=\"submit\" class=\"submit-button\" id=\"actionButton\">아이디 찾기</button>\r\n");
      out.write("        					</div>\r\n");
      out.write("	                    </div>\r\n");
      out.write("	                    <div id=\"resultSection\" style=\"display: none;\">\r\n");
      out.write("					        <p id=\"resultMessage\"></p>\r\n");
      out.write("					    </div>\r\n");
      out.write("	                </form>\r\n");
      out.write("	            </div>\r\n");
      out.write("	        </div>\r\n");
      out.write("	    </div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<script>\r\n");
      out.write("	    let loginFailMsg = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginFailMsg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("	    if (loginFailMsg) {\r\n");
      out.write("	        alert(loginFailMsg);\r\n");
      out.write("	    }\r\n");
      out.write("\r\n");
      out.write("	    // 모달 열기\r\n");
      out.write("	    document.getElementById('openModal').onclick = function() {\r\n");
      out.write("	        document.getElementById('modal').style.display = 'block';\r\n");
      out.write("	    };\r\n");
      out.write("\r\n");
      out.write("	    // 모달 닫기\r\n");
      out.write("	    document.getElementById('closeModal').onclick = function() {\r\n");
      out.write("	        document.getElementById('modal').style.display = 'none';\r\n");
      out.write("	        document.getElementById('emailInput').value = ''; // 이메일 입력 필드 비우기\r\n");
      out.write("	        document.getElementById('phoneInput').value = ''; // 전화번호 입력 필드 비우기\r\n");
      out.write("	        document.getElementById('userIdInput').value = ''; // 아이디 입력 필드 비우기\r\n");
      out.write("	        document.getElementById('resultSection').style.display = 'none'; // 결과 영역 숨기기\r\n");
      out.write("	        document.getElementById('findSection').style.display = 'block'; // 입력 필드 보이기\r\n");
      out.write("	        document.getElementById('actionType').value = 'findId'; // actionType 값을 'findId'로 초기화\r\n");
      out.write("	        document.getElementById('modal-title').innerText = '아이디 찾기'; // 모달 제목 초기화\r\n");
      out.write("	        document.getElementById('findIdButton').classList.add('active'); // 아이디 찾기 버튼 활성화\r\n");
      out.write("	        document.getElementById('findPasswordButton').classList.remove('active'); // 비밀번호 찾기 버튼 비활성화\r\n");
      out.write("	    };\r\n");
      out.write("	 // 비밀번호 찾기 버튼 클릭 시\r\n");
      out.write("	    document.getElementById('findPasswordButton').onclick = function(event) {\r\n");
      out.write("	        event.preventDefault(); // 기본 링크 동작 방지\r\n");
      out.write("	        document.getElementById('modal-title').innerText = '비밀번호 찾기';\r\n");
      out.write("\r\n");
      out.write("	        // 아이디 찾기 결과를 숨기고 비밀번호 찾기 관련 요소를 보여줍니다.\r\n");
      out.write("	        document.getElementById('resultSection').style.display = 'none'; // 결과 영역 숨기기\r\n");
      out.write("	        document.getElementById('findSection').style.display = 'block'; // 입력 필드 보이기\r\n");
      out.write("	        document.getElementById('phoneLabel').style.display = 'none'; // 전화번호 레이블 숨기기\r\n");
      out.write("	        document.getElementById('phoneInput').style.display = 'none'; // 전화번호 입력 필드 숨기기\r\n");
      out.write("	        document.getElementById('userIdLabel').style.display = 'block'; // 아이디 레이블 보이기\r\n");
      out.write("	        document.getElementById('userIdInput').style.display = 'block'; // 아이디 입력 필드 보이기\r\n");
      out.write("	        document.getElementById('actionButton').innerText = '비밀번호 찾기'; // 버튼 텍스트 변경\r\n");
      out.write("	        document.getElementById('actionType').value = 'findPassword'; // actionType 값 변경\r\n");
      out.write("	        document.getElementById('findIdButton').classList.remove('active'); // 아이디 찾기 버튼 비활성화\r\n");
      out.write("	        document.getElementById('findPasswordButton').classList.add('active'); // 비밀번호 찾기 버튼 활성화\r\n");
      out.write("	        // 입력 필드 초기화\r\n");
      out.write("	        document.getElementById('emailInput').value = ''; // 이메일 입력 필드 비우기\r\n");
      out.write("	        document.getElementById('phoneInput').value = ''; // 전화번호 입력 필드 비우기\r\n");
      out.write("	        document.getElementById('userIdInput').value = ''; // 아이디 입력 필드 비우기\r\n");
      out.write("	        document.getElementById('resultSection').style.display = 'none'; // 결과 영역 숨기기\r\n");
      out.write("	    };\r\n");
      out.write("\r\n");
      out.write("	    // 아이디 찾기 버튼 클릭 시\r\n");
      out.write("	    document.getElementById('findIdButton').onclick = function(event) {\r\n");
      out.write("	        event.preventDefault(); // 기본 링크 동작 방지\r\n");
      out.write("	        document.getElementById('modal-title').innerText = '아이디 찾기';\r\n");
      out.write("	        document.getElementById('sectionLabel').innerText = '가입한 이메일 입력';\r\n");
      out.write("	        document.getElementById('phoneLabel').style.display = 'block';\r\n");
      out.write("	        document.getElementById('phoneInput').style.display = 'block';\r\n");
      out.write("	        document.getElementById('userIdLabel').style.display = 'none';\r\n");
      out.write("	        document.getElementById('userIdInput').style.display = 'none';\r\n");
      out.write("	        document.getElementById('actionButton').innerText = '아이디 찾기'; // 버튼 텍스트 변경\r\n");
      out.write("	        document.getElementById('actionType').value = 'findId'; // actionType 값 변경\r\n");
      out.write("	        document.getElementById('findPasswordButton').classList.remove('active'); // 비밀번호 찾기 버튼 비활성화\r\n");
      out.write("	        document.getElementById('findIdButton').classList.add('active'); // 아이디 찾기 버튼 활성화\r\n");
      out.write("	        // 입력 필드 초기화\r\n");
      out.write("	        document.getElementById('emailInput').value = ''; // 이메일 입력 필드 비우기\r\n");
      out.write("	        document.getElementById('phoneInput').value = ''; // 전화번호 입력 필드 비우기\r\n");
      out.write("	        document.getElementById('userIdInput').value = ''; // 아이디 입력 필드 비우기\r\n");
      out.write("	        document.getElementById('resultSection').style.display = 'none'; // 결과 영역 숨기기\r\n");
      out.write("	    };\r\n");
      out.write("\r\n");
      out.write("	    // 아이디 찾기 성공 시\r\n");
      out.write("	    document.getElementById('findForm').onsubmit = function(event) {\r\n");
      out.write("	        event.preventDefault(); // 기본 폼 제출 방지\r\n");
      out.write("\r\n");
      out.write("	        // 폼 데이터 수집\r\n");
      out.write("	        const formData = new FormData(this);\r\n");
      out.write("\r\n");
      out.write("	        // AJAX 요청\r\n");
      out.write("	        fetch(this.action, {\r\n");
      out.write("	            method: 'POST',\r\n");
      out.write("	            body: formData\r\n");
      out.write("	        })\r\n");
      out.write("	        .then(response => response.text())\r\n");
      out.write("	        .then(data => {\r\n");
      out.write("	            // 결과 메시지 표시\r\n");
      out.write("	            document.getElementById('resultMessage').innerText = data;\r\n");
      out.write("	            document.getElementById('resultSection').style.display = 'block'; // 결과 영역 보이기\r\n");
      out.write("\r\n");
      out.write("	            // 입력 필드 숨기기\r\n");
      out.write("	            document.getElementById('findSection').style.display = 'none'; // 입력 필드 숨기기\r\n");
      out.write("	        })\r\n");
      out.write("	        .catch(error => {\r\n");
      out.write("	            console.error('Error:', error);\r\n");
      out.write("	        });\r\n");
      out.write("	    };\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
