/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.96
 * Generated at: 2025-01-09 06:16:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class search_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1733127990249L));
    _jspx_dependants.put("/WEB-INF/views/member/sideMenu.jsp", Long.valueOf(1736382410481L));
    _jspx_dependants.put("jar:file:/C:/spring-workspace/final_git/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel =\"stylesheet\"  href=\"/resources/default.css\">\r\n");
      out.write("<link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.7.1.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("	.searchInputBox {\r\n");
      out.write("		display: flex;\r\n");
      out.write("		align-items: center; /* 수직 정렬 */\r\n");
      out.write("		border: 3px solid #ccc;\r\n");
      out.write("		padding: 0 10px 0 10px;\r\n");
      out.write("		border-radius: 16px;\r\n");
      out.write("		width: 400px;\r\n");
      out.write("		height: 40px; /* 고정 높이 설정 */\r\n");
      out.write("		background-color: white; /* 배경색 */\r\n");
      out.write("		flex-shrink: 0; /* 컨테이너가 줄어들지 않도록 설정 */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.searchInputBox svg {\r\n");
      out.write("		margin-right: 12px; /* 아이콘과 입력창 간 간격 */\r\n");
      out.write("		vertical-align: middle; /* 아이콘 위치 중앙 정렬 */\r\n");
      out.write("		flex-shrink: 0; /* 아이콘 크기 고정 */\r\n");
      out.write("	}\r\n");
      out.write("	/* 포커스가 있을 때 SVG 아이콘 숨기기 */\r\n");
      out.write("	.searchInputBox:focus-within svg {\r\n");
      out.write("		display: none; /* 아이콘을 완전히 숨김 */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.searchInputBox input[type=\"search\"] {\r\n");
      out.write("		padding: 0;\r\n");
      out.write("		margin: 0;\r\n");
      out.write("		border: none; /* 테두리 제거 */\r\n");
      out.write("		outline: none; /* 클릭 시 아웃라인 제거 */\r\n");
      out.write("		flex: 1; /* 입력 필드가 남은 공간 차지 */\r\n");
      out.write("		flex-shrink: 0; /* 줄어들지 않도록 설정 */\r\n");
      out.write("		font-size: 16px; /* 글자 크기 */\r\n");
      out.write("		color: #666; /* 글자 색상 */\r\n");
      out.write("		background-color: white; /* 배경 투명 */\r\n");
      out.write("		height: 100%;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.searchInputBox input[type=\"search\"]::placeholder {\r\n");
      out.write("		color: #aaa;\r\n");
      out.write("	}\r\n");
      out.write("	.dropdown-bottom-line{\r\n");
      out.write("	    border-color: gray;\r\n");
      out.write("	    height: 0;\r\n");
      out.write("	    width:425px;\r\n");
      out.write("	    margin: .5rem 0;\r\n");
      out.write("	    overflow: hidden;\r\n");
      out.write("	    border-top: 1px solid gray;\r\n");
      out.write("	    border-top-color: gray;\r\n");
      out.write("	}\r\n");
      out.write("	.searchResults {\r\n");
      out.write("		width: 425.2px;\r\n");
      out.write("		padding: 0;\r\n");
      out.write("		margin: 20px 0 0 0;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.searchResults ul {\r\n");
      out.write("		margin: 0;\r\n");
      out.write("		padding: 0;\r\n");
      out.write("	}\r\n");
      out.write("	.searchRecord{\r\n");
      out.write("		width: 425.2px;\r\n");
      out.write("		padding: 0;\r\n");
      out.write("		margin: 20px 0 0 0;\r\n");
      out.write("	}\r\n");
      out.write("	.searchRecord ul{\r\n");
      out.write("		margin: 0;\r\n");
      out.write("		padding: 0;\r\n");
      out.write("	}\r\n");
      out.write("	.searchRecordBox li{\r\n");
      out.write("		list-style-type: none;\r\n");
      out.write("		margin-bottom: 8px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	.ResultBox li {\r\n");
      out.write("		list-style-type: none;\r\n");
      out.write("		margin-bottom: 8px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.user-result {\r\n");
      out.write("		width: 100%;\r\n");
      out.write("		display: flex;\r\n");
      out.write("		justify-content: space-between; /* 아이템 간의 공간을 균등하게 배분 */\r\n");
      out.write("    	align-items: center; /* 수직 중앙 정렬 */\r\n");
      out.write("		font-size: 16px;\r\n");
      out.write("		height: 62px;\r\n");
      out.write("	}\r\n");
      out.write("	.user-result:hover {\r\n");
      out.write("		background-color: #E6E6E6;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.a-user {\r\n");
      out.write("		display: block; /* block으로 변경하여 a가 li 크기를 채우도록 설정 */\r\n");
      out.write("		width: 100%; /* 부모 요소의 너비만큼 클릭 가능 */\r\n");
      out.write("		height: 100%;\r\n");
      out.write("		text-decoration: none; /* 밑줄 제거 */\r\n");
      out.write("		margin-left: 10px;\r\n");
      out.write("	}\r\n");
      out.write("	.delete-search {\r\n");
      out.write("	    display: flex; /* Flexbox 활성화 */\r\n");
      out.write("	    justify-content: center; /* 수평 중앙 정렬 */\r\n");
      out.write("	    align-items: center; /* 수직 중앙 정렬 */\r\n");
      out.write("	    margin-right: 10px; /* 왼쪽으로 약간 이동 */\r\n");
      out.write("	}\r\n");
      out.write("	.profile-container {\r\n");
      out.write("		display: flex;\r\n");
      out.write("		line-height: 62px; /* 세로 중앙 정렬 (li의 높이와 동일하게 설정) */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.hash-container{\r\n");
      out.write("		display: flex;\r\n");
      out.write("		line-height: 31px;\r\n");
      out.write("	}	\r\n");
      out.write("	.result-container{\r\n");
      out.write("		display: flex;\r\n");
      out.write("		line-height: 62px; /* 세로 중앙 정렬 (li의 높이와 동일하게 설정) */\r\n");
      out.write("	}\r\n");
      out.write("	.result-profile{\r\n");
      out.write("		font-size: 24px;\r\n");
      out.write("		width: 45px;\r\n");
      out.write("		height: 45px;\r\n");
      out.write("		border: 1px solid gray;\r\n");
      out.write("		border-radius: 50%;\r\n");
      out.write("		background-color: white;\r\n");
      out.write("		margin: 8px 12px 5px 0;\r\n");
      out.write("		display: flex; /* Flexbox 활성화 */\r\n");
      out.write("	    justify-content: center; /* 수평 가운데 정렬 */\r\n");
      out.write("	    align-items: center; /* 수직 가운데 정렬 */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.SearchName{\r\n");
      out.write("		display: flex;\r\n");
      out.write("	    font-weight: bold;\r\n");
      out.write("	    font-size: 16px;\r\n");
      out.write("	    justify-content: center; /* 수평 가운데 정렬 */\r\n");
      out.write("        align-items: center;\r\n");
      out.write("	    margin: 0; /* 여백 제거 */\r\n");
      out.write("    	line-height: normal; /* 텍스트 높이를 기본값으로 */\r\n");
      out.write("	}\r\n");
      out.write("	.tag-profile{\r\n");
      out.write("		font-size: 24px;\r\n");
      out.write("		width: 45px;\r\n");
      out.write("		height: 45px;\r\n");
      out.write("		border: 1px solid gray;\r\n");
      out.write("		border-radius: 50%;\r\n");
      out.write("		background-color: white;\r\n");
      out.write("		margin: 8px 12px 5px 0;\r\n");
      out.write("		display: flex; /* Flexbox 활성화 */\r\n");
      out.write("	    justify-content: center; /* 수평 가운데 정렬 */\r\n");
      out.write("	    align-items: center; /* 수직 가운데 정렬 */\r\n");
      out.write("	}\r\n");
      out.write("	.tag-span{\r\n");
      out.write("		display: flex;\r\n");
      out.write("    	flex-direction: column; /* 태그 이름과 게시글 수를 수직으로 정렬 */\r\n");
      out.write("    	justify-content: center; /* 수직 정렬 */\r\n");
      out.write("    	gap: 2px; /* 태그 이름과 게시글 수 간의 간격 */ \r\n");
      out.write("	}\r\n");
      out.write("	.tagName {\r\n");
      out.write("		display: flex;\r\n");
      out.write("	    font-weight: bold;\r\n");
      out.write("	    font-size: 16px;\r\n");
      out.write("	    margin: 0; /* 여백 제거 */\r\n");
      out.write("    	line-height: normal; /* 텍스트 높이를 기본값으로 */\r\n");
      out.write("	}\r\n");
      out.write("	.tagNames{\r\n");
      out.write("		display: flex;\r\n");
      out.write("	    font-weight: bold;\r\n");
      out.write("	    font-size: 16px;\r\n");
      out.write("	    justify-content: center; /* 수평 가운데 정렬 */\r\n");
      out.write("        align-items: center;\r\n");
      out.write("	    margin: 0; /* 여백 제거 */\r\n");
      out.write("    	line-height: normal; /* 텍스트 높이를 기본값으로 */\r\n");
      out.write("	}\r\n");
      out.write("	.tagPostCount {\r\n");
      out.write("		display: block; /* block으로 설정하여 아래로 이동 */\r\n");
      out.write("	    color: #666;\r\n");
      out.write("	    font-size: 12px;\r\n");
      out.write("	    margin: 0; /* 여백 제거 */\r\n");
      out.write("    	line-height: normal; /* 텍스트 높이를 기본값으로 */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.user-profile {\r\n");
      out.write("		width: 45px;\r\n");
      out.write("		height: 45px;\r\n");
      out.write("		border-radius: 50%;\r\n");
      out.write("		background-color: gray;\r\n");
      out.write("		margin: 8px 12px 5px 0;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#search-result {\r\n");
      out.write("		line-height: 62px; /* 세로 중앙 정렬 (li의 높이와 동일하게 설정) */\r\n");
      out.write("		text-align: center; /* 가로 중앙 정렬 */\r\n");
      out.write("	}\r\n");
      out.write("	.profileImage{\r\n");
      out.write("		background-color: #E6E6E6;\r\n");
      out.write("		height: 100%;\r\n");
      out.write("		width: 100%;\r\n");
      out.write("		border-radius: 50%;\r\n");
      out.write("		overflow: hidden; /*나중에 사진 들어가면 깔끔하게 잘리게*/\r\n");
      out.write("	}\r\n");
      out.write("	#ResultCategory{\r\n");
      out.write("		font-weight: bold;\r\n");
      out.write("		font-size: 18px;\r\n");
      out.write("		margin-left: 12px;\r\n");
      out.write("	}\r\n");
      out.write("	.ResultBtnBox{\r\n");
      out.write("		display: flex; /* Flexbox 활성화 */\r\n");
      out.write("		justify-content: space-between; /* 양쪽 끝으로 정렬 */\r\n");
      out.write("		align-items: center; /* 수직 중앙 정렬 */\r\n");
      out.write("		height: 42px;\r\n");
      out.write("	}\r\n");
      out.write("	.resultAllDelete{\r\n");
      out.write("		color: #0095F6;\r\n");
      out.write("	}\r\n");
      out.write("	.resultAllDelete:hover{\r\n");
      out.write("		color: black;\r\n");
      out.write("	}\r\n");
      out.write("	.user-profile{\r\n");
      out.write("		border: 1px solid gray;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.7.1.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("	\r\n");
      out.write("		<nav class=\"side-menu\">\r\n");
      out.write("			<div class=\"nav-logo\">\r\n");
      out.write("				<img alt=\"댕냥일기\"  src=\"/resources/css_image/logo.png\"  class=\"logo-img\">\r\n");
      out.write("				<span class=\"nav-logo-text\">댕냥일기</span>\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("			  <div class=\"menu-list\">\r\n");
      out.write("				<div class=\"one-menu\">\r\n");
      out.write("					<img alt=\"메뉴아이콘\" src=\"/resources/css_image/icon.png\" class=\"icon-img\">\r\n");
      out.write("					<a href=\"/member/mainFeed.kh\" class=\"menu-link\">홈</a>\r\n");
      out.write("				</div>\r\n");
      out.write("				\r\n");
      out.write("				<div class=\"one-menu\">\r\n");
      out.write("					<img alt=\"메뉴아이콘\" src=\"/resources/css_image/icon.png\" class=\"icon-img\">\r\n");
      out.write("					<a href=\"/member/search.kh\" class=\"menu-link\">검색</a>\r\n");
      out.write("				</div>\r\n");
      out.write("				\r\n");
      out.write("				<div class=\"one-menu\">\r\n");
      out.write("					<img alt=\"메뉴아이콘\" src=\"/resources/css_image/icon.png\" class=\"icon-img\">\r\n");
      out.write("					 <a class=\"open-notification-btn\" >알림</a>\r\n");
      out.write("				</div>\r\n");
      out.write("				\r\n");
      out.write("				<div class=\"one-menu\">\r\n");
      out.write("					<img alt=\"메뉴아이콘\" src=\"/resources/css_image/icon.png\" class=\"icon-img\">\r\n");
      out.write("					<a href=\"/chat/chatRoomList.kh\" class=\"menu-link\">메시지</a>\r\n");
      out.write("				</div>\r\n");
      out.write("				\r\n");
      out.write("				");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("			</div>		\r\n");
      out.write("			\r\n");
      out.write("			<div class=\"profile\">\r\n");
      out.write("				<div class=\"profile-frame\">\r\n");
      out.write("					<img class=\"profileImage\"\r\n");
      out.write("                            src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty loginMember.userImage ? loginMember.userImage : '/resources/profile_file/default_profile.png'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\r\n");
      out.write("                            alt=\"프로필 이미지\" />\r\n");
      out.write("				</div>\r\n");
      out.write("					<a class=\"myNick\" href=\"/post/myFeedFrm.kh\"> ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.userNickname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a>\r\n");
      out.write("			</div>\r\n");
      out.write("			<hr>\r\n");
      out.write("			<hr>\r\n");
      out.write("			<a href=\"/member/logout.kh\" style=\"color: gray;\">\r\n");
      out.write("			<i class=\"fa-solid fa-right-from-bracket\" style=\"color: gray;\"></i> 로그아웃</a>					\r\n");
      out.write("		</nav>\r\n");
      out.write("		\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	 <div class=\"notification-sidebar\" id=\"notificationSidebar\">\r\n");
      out.write("		    <button class=\"close-sidebar-btn\">&times;</button> <!-- X 버튼 -->\r\n");
      out.write("		    <div class=\"notification-header\">\r\n");
      out.write("		        <span>알림</span>\r\n");
      out.write("		        <button class=\"mark-all-read-btn\">지우기</button>\r\n");
      out.write("		    </div>\r\n");
      out.write("		    <div class=\"notification-content\">\r\n");
      out.write("		        <p>읽지 않은 알림이 없습니다.</p>\r\n");
      out.write("		    </div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("   <script>\r\n");
      out.write("	    $(document).ready(function () {\r\n");
      out.write("	        // JSP에서 사용자 번호를 전달받음\r\n");
      out.write("	        let userNo = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.userNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("; // JSP 변수\r\n");
      out.write("	\r\n");
      out.write("	        // 알림 사이드바 열기\r\n");
      out.write("	        $('.open-notification-btn').click(function () {\r\n");
      out.write("	            $('#notificationSidebar').addClass('open');\r\n");
      out.write("	            fetchNotifications(); // 알림 가져오기\r\n");
      out.write("	        });\r\n");
      out.write("	\r\n");
      out.write("	        // 알림 사이드바 닫기\r\n");
      out.write("	        $('.close-sidebar-btn').click(function () {\r\n");
      out.write("	            $('#notificationSidebar').removeClass('open');\r\n");
      out.write("	        });\r\n");
      out.write("	\r\n");
      out.write("	        // 외부 클릭 시 닫기\r\n");
      out.write("	        $(document).click(function (event) {\r\n");
      out.write("	            if (!$(event.target).closest('#notificationSidebar, .open-notification-btn').length) {\r\n");
      out.write("	                $('#notificationSidebar').removeClass('open');\r\n");
      out.write("	            }\r\n");
      out.write("	        });\r\n");
      out.write("	\r\n");
      out.write("	        // 알림 가져오기 (문자열 결합 방식)\r\n");
      out.write("	        function fetchNotifications() {\r\n");
      out.write("	            var url = '/notify/poll/' + userNo;\r\n");
      out.write("	\r\n");
      out.write("	            $.ajax({\r\n");
      out.write("	                url: url,\r\n");
      out.write("	                method: 'GET',\r\n");
      out.write("	                success: function (notifications) {\r\n");
      out.write("	                    var contentHtml = '';\r\n");
      out.write("	\r\n");
      out.write("	                    if (notifications.length > 0) {\r\n");
      out.write("	                        notifications.forEach(function (notification) {\r\n");
      out.write("	                            contentHtml +=\r\n");
      out.write("	                                '<div class=\"notification-item\">' +\r\n");
      out.write("	                                '<span>' + notification.notifyContent + '</span>' +\r\n");
      out.write("	                                '</div>';\r\n");
      out.write("	                        });\r\n");
      out.write("	                    } else {\r\n");
      out.write("	                        contentHtml = '<p>읽지 않은 알림이 없습니다.</p>';\r\n");
      out.write("	                    }\r\n");
      out.write("	\r\n");
      out.write("	                    $('.notification-content').html(contentHtml);\r\n");
      out.write("	                },\r\n");
      out.write("	                error: function () {\r\n");
      out.write("	                    console.error('알림을 가져오는 중 오류 발생');\r\n");
      out.write("	                }\r\n");
      out.write("	            });\r\n");
      out.write("	        }\r\n");
      out.write("	\r\n");
      out.write("	     // 모든 알림 읽음 처리\r\n");
      out.write("	        function markAllAsRead() {\r\n");
      out.write("	            $.ajax({\r\n");
      out.write("	                url: '/notify/mark-all-read/' + userNo,\r\n");
      out.write("	                method: 'PUT',\r\n");
      out.write("	                success: function (response) {\r\n");
      out.write("	                    if (response === 'success') {\r\n");
      out.write("	                        console.log('모든 알림 읽음 처리 완료');\r\n");
      out.write("	                        fetchNotifications(); // UI 갱신\r\n");
      out.write("	                    } else {\r\n");
      out.write("	                        console.error('모든 알림 읽음 처리 실패');\r\n");
      out.write("	                    }\r\n");
      out.write("	                },\r\n");
      out.write("	                error: function () {\r\n");
      out.write("	                    console.error('모든 알림 읽음 처리 중 오류 발생');\r\n");
      out.write("	                }\r\n");
      out.write("	            });\r\n");
      out.write("	        }\r\n");
      out.write("\r\n");
      out.write("	        // 버튼 클릭 이벤트에 연결\r\n");
      out.write("	        $('.mark-all-read-btn').click(markAllAsRead);\r\n");
      out.write("\r\n");
      out.write("	       \r\n");
      out.write("	    });\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		\r\n");
      out.write("			\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("<main>\r\n");
      out.write("    <form action=\"/member/keywordSearch.kh\" method=\"get\">\r\n");
      out.write("        <div class=\"searchInputBox\" id=\"searchInputBox\">\r\n");
      out.write("            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"#999\" class=\"bi bi-search\" viewBox=\"0 0 16 16\">\r\n");
      out.write("                <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\"/>\r\n");
      out.write("            </svg>\r\n");
      out.write("            <input type=\"search\" class=\"search\" name=\"search\" id=\"search\" placeholder=\"아이디/이름 검색하기\" autocomplete=\"off\" onkeyup=\"searchResults(this.value)\">        \r\n");
      out.write("        </div>\r\n");
      out.write("        <br>\r\n");
      out.write("        <div class=\"dropdown-bottom-line\"></div>\r\n");
      out.write("        	");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("			<div class=\"searchResults\" id=\"searchResults\">\r\n");
      out.write("            <ul class=\"ResultBox\" id=\"ResultBox\">\r\n");
      out.write("            \r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </form>    \r\n");
      out.write("</main>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("	//입력을 받을때 마다 이벤트 발생 \r\n");
      out.write("	$(document).ready(function() {\r\n");
      out.write("		// 검색 입력란에 입력 이벤트(keyup)가 발생할 때마다 searchResults 함수 실행\r\n");
      out.write("		$('#search').on('keyup', function() {\r\n");
      out.write("			var searchValue = $(this).val().trim();\r\n");
      out.write("\r\n");
      out.write("			// 입력 필드에 값이 없을 때 searchRecord를 다시 보이게 함\r\n");
      out.write("			if (searchValue.length === 0) {\r\n");
      out.write("				$('#searchRecord').show();\r\n");
      out.write("				$('#ResultBox').hide(); // 검색 결과를 숨김\r\n");
      out.write("			} else {\r\n");
      out.write("				$('#searchRecord').hide();\r\n");
      out.write("				$('#ResultBox').show();\r\n");
      out.write("				searchResults(searchValue);\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			// 기존의 searchResults 함수 호출\r\n");
      out.write("\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("	let debounceTimeout = null;\r\n");
      out.write("	// 디바운스 하는 이유 : 서버 과부화 최소화하기 위해    \r\n");
      out.write("	function searchResults(search) {\r\n");
      out.write("		clearTimeout(debounceTimeout); // 이전에 설정된 타이머 제거 (중복 요청 방지)\r\n");
      out.write("		debounceTimeout = setTimeout(\r\n");
      out.write("				function() {\r\n");
      out.write("					var searchResultsBox = $('#ResultBox');\r\n");
      out.write("					if (search.trim().length == 0 || search == '#') { // 검색어가 비었거나 '#'만 있는 경우\r\n");
      out.write("						searchResultsBox.hide();\r\n");
      out.write("						searchResultsBox.empty();\r\n");
      out.write("						return;\r\n");
      out.write("					}\r\n");
      out.write("					$\r\n");
      out.write("							.ajax({\r\n");
      out.write("								type : 'GET',\r\n");
      out.write("								url : '/member/searchBoard.kh',\r\n");
      out.write("								data : {\r\n");
      out.write("									search : search\r\n");
      out.write("								}, // 'searchStr'에서 'search'로 변경\r\n");
      out.write("								success : function(response) {\r\n");
      out.write("									if ($.trim(response)) {\r\n");
      out.write("										searchResultsBox.html(response).show(); // 서버에서 받은 HTML 그대로 삽입\r\n");
      out.write("									} else {\r\n");
      out.write("										searchResultsBox\r\n");
      out.write("												.html(\r\n");
      out.write("														'<li class=\"user-result\"><span id=\"search-result\">검색 결과가 없습니다.</span></li>')\r\n");
      out.write("												.show();\r\n");
      out.write("									}\r\n");
      out.write("								},\r\n");
      out.write("								error : function() {\r\n");
      out.write("									searchResultsBox\r\n");
      out.write("											.html(\r\n");
      out.write("													'<li class=\"user-result\">서버 오류가 발생했습니다.</li>')\r\n");
      out.write("											.show();\r\n");
      out.write("								}\r\n");
      out.write("							});\r\n");
      out.write("				}, 300); // 사용자가 입력을 멈춘 후 300ms(0.3초)가 지나면 서버 요청 실행\r\n");
      out.write("	}\r\n");
      out.write("	// 삭제 링크 클릭 이벤트\r\n");
      out.write("	$(document).on('click', '.delete-search', function(e) {\r\n");
      out.write("		e.preventDefault(); // 기본 링크 동작 방지\r\n");
      out.write("		var keyword = $(this).data('keyword'); // 삭제할 검색어 가져오기\r\n");
      out.write("		var searchType = $(this).data('search-type'); // 삭제할 검색 타입 가져오기\r\n");
      out.write("		var $listItem = $(this).closest('li'); // 삭제할 항목의 li 요소\r\n");
      out.write("\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type : 'POST',\r\n");
      out.write("			url : '/member/deleteSearchHistory.kh', // 삭제 요청 URL\r\n");
      out.write("			data : {\r\n");
      out.write("				search : keyword,\r\n");
      out.write("				searchType : searchType\r\n");
      out.write("			}, // 검색어와 검색 타입 전송\r\n");
      out.write("			success : function(response) {\r\n");
      out.write("				// 삭제 성공 시 해당 항목을 DOM에서 제거\r\n");
      out.write("				$listItem.remove(); // 삭제된 항목을 DOM에서 제거\r\n");
      out.write("			},\r\n");
      out.write("			error : function() {\r\n");
      out.write("				console.log('서버 오류가 발생했습니다.');\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	// 전체 삭제 버튼 클릭 이벤트\r\n");
      out.write("	$(document).on('click', '.resultAllDelete', function(e) {\r\n");
      out.write("		e.preventDefault(); // 기본 링크 동작 방지\r\n");
      out.write("\r\n");
      out.write("	    // AJAX 요청\r\n");
      out.write("	    $.ajax({\r\n");
      out.write("	        type: 'POST',\r\n");
      out.write("	        url: '/member/deleteSearchHistory.kh', // 삭제 요청 URL\r\n");
      out.write("	        data: {\r\n");
      out.write("	            search: 'all', // 전체 삭제를 위한 파라미터\r\n");
      out.write("	            searchType: null // 필요하지 않음\r\n");
      out.write("	        },\r\n");
      out.write("	        success: function(response) {\r\n");
      out.write("	        	location.reload(); // 페이지 새로고침\r\n");
      out.write("	        },\r\n");
      out.write("	        error: function() {\r\n");
      out.write("	            console.log('서버 오류가 발생했습니다.');\r\n");
      out.write("	        }\r\n");
      out.write("	    });\r\n");
      out.write("	});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent(null);
    // /WEB-INF/views/member/sideMenu.jsp(41,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.acctLevel > 0}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("					<div class=\"one-menu\">\r\n");
        out.write("                    	<img alt=\"메뉴아이콘\" src=\"/resources/css_image/icon.png\" class=\"icon-img\">\r\n");
        out.write("                    <a href=\"/story/modalTest.kh\" class=\"menu-link\">신고 내역</a>\r\n");
        out.write("                </div>\r\n");
        out.write("				");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager());
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f1.setParent(null);
    // /WEB-INF/views/member/search.jsp(245,9) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty searchs}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
    if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("			<div class=\"searchRecord\" id=\"searchRecord\">\r\n");
        out.write("				<div class=\"ResultBtnBox\">\r\n");
        out.write("					<div id=\"ResultCategory\">최근 검색 항목</div>\r\n");
        out.write("					<div><a href=\"#\" class=\"resultAllDelete\">모두 지우기</a></div>\r\n");
        out.write("				</div>\r\n");
        out.write("				<ul class=\"searchRecordBox\" id=\"searchRecordBox\">\r\n");
        out.write("					");
        if (_jspx_meth_c_005fforEach_005f0(_jspx_th_c_005fif_005f1, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("				</ul>\r\n");
        out.write("			</div>\r\n");
        out.write("			");
        int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager());
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
    // /WEB-INF/views/member/search.jsp(252,5) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setVar("search");
    // /WEB-INF/views/member/search.jsp(252,5) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/member/search.jsp(252,5) '${searchs}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${searchs}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
      if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("						");
          if (_jspx_meth_c_005fchoose_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\r\n");
          out.write("					");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f0.doFinally();
    }
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager());
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fchoose_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
    int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
    if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("							");
        if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
          return true;
        out.write("\r\n");
        out.write("							");
        if (_jspx_meth_c_005fwhen_005f1(_jspx_th_c_005fchoose_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
          return true;
        out.write("\r\n");
        out.write("							");
        if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
          return true;
        out.write("\r\n");
        out.write("						");
        int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager());
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
    // /WEB-INF/views/member/search.jsp(254,7) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${search.searchType == 'G'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
    if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("								<li class=\"user-result\">\r\n");
        out.write("									<a class=\"a-user\" href=\"/member/searchHistory.kh?search=");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${search.keyWord}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("&vals=x&searchType=");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${search.searchType}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\">\r\n");
        out.write("										<div class=\"result-container\">\r\n");
        out.write("											<div class=\"result-profile\">\r\n");
        out.write("												<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"black\" class=\"bi bi-search\" viewBox=\"0 0 16 16\">\r\n");
        out.write("  													<path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\"/>\r\n");
        out.write("												</svg>\r\n");
        out.write("											</div>\r\n");
        out.write("											<span class=\"SearchName\">");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${search.keyWord}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("</span>\r\n");
        out.write("										</div>\r\n");
        out.write("									</a>\r\n");
        out.write("									<a href=\"#\" class=\"delete-search\" data-keyword=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${search.keyWord}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\" data-search-type=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${search.searchType}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\">\r\n");
        out.write("										<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" fill=\"gray\" class=\"bi bi-x-lg\" viewBox=\"0 0 16 16\">\r\n");
        out.write("  											<path d=\"M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z\"/>\r\n");
        out.write("										</svg>\r\n");
        out.write("									</a>\r\n");
        out.write("								</li>\r\n");
        out.write("							");
        int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager());
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f1 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
    // /WEB-INF/views/member/search.jsp(273,7) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fwhen_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${search.searchType == 'H'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
    if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("								<li class=\"user-result\">\r\n");
        out.write("									<a class=\"a-user\" href=\"/member/searchHistory.kh?hashName=");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${search.keyWord}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("&vals=x&searchType=");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${search.searchType}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\">\r\n");
        out.write("										<div class=\"hash-container\">\r\n");
        out.write("											<div class=\"tag-profile\">\r\n");
        out.write("												<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"black\">\r\n");
        out.write("                                        			<path d=\"m240-160 40-160H120l20-80h160l40-160H180l20-80h160l40-160h80l-40 160h160l40-160h80l-40 160h160l-20 80H660l-40 160h160l-20 80H600l-40 160h-80l40-160H360l-40 160h-80Zm140-240h160l40-160H420l-40 160Z\" />\r\n");
        out.write("                                    			</svg>\r\n");
        out.write("											</div>\r\n");
        out.write("											<span class=\"tagNames\">");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${search.keyWord}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("</span>\r\n");
        out.write("										</div>\r\n");
        out.write("									</a>\r\n");
        out.write("									<a href=\"#\" class=\"delete-search\" data-keyword=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${search.keyWord}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\" data-search-type=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${search.searchType}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\">\r\n");
        out.write("										<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" fill=\"gray\" class=\"bi bi-x-lg\" viewBox=\"0 0 16 16\">\r\n");
        out.write("  											<path d=\"M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z\"/>\r\n");
        out.write("										</svg>\r\n");
        out.write("									</a>\r\n");
        out.write("								</li>\r\n");
        out.write("							");
        int evalDoAfterBody = _jspx_th_c_005fwhen_005f1.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f1);
    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f1, _jsp_getInstanceManager());
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
    int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
    if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("								<li class=\"user-result\">\r\n");
        out.write("									<a class=\"a-user\" href=\"/member/searchHistory.kh?userName=");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${search.searchUserId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("&vals=x&searchType=");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${search.searchType}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\">\r\n");
        out.write("										<div class=\"profile-container\">\r\n");
        out.write("											<div class=\"user-profile\">\r\n");
        out.write("											<img class=\"profileImage\" src=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty search.userImage ? search.userImage : '/resources/profile_file/default_profile.png'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\"alt=\"프로필 이미지\" />\r\n");
        out.write("											</div>\r\n");
        out.write("											<span>");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${search.searchUserId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("</span>\r\n");
        out.write("										</div>\r\n");
        out.write("									</a>\r\n");
        out.write("									<a href=\"#\" class=\"delete-search\" data-keyword=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${search.searchUserId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\" data-search-type=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${search.searchType}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\">\r\n");
        out.write("										<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" fill=\"gray\" class=\"bi bi-x-lg\" viewBox=\"0 0 16 16\">\r\n");
        out.write("  											<path d=\"M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z\"/>\r\n");
        out.write("										</svg>\r\n");
        out.write("									</a>\r\n");
        out.write("								</li>\r\n");
        out.write("							");
        int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager());
    return false;
  }
}
